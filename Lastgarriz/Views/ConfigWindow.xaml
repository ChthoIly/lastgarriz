<Window x:Class="Lastgarriz.Views.ConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:t="clr-namespace:Lastgarriz.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:c="clr-namespace:Lastgarriz.ViewModels.Command"
        xmlns:u="clr-namespace:Lastgarriz.Util.Converter"
        xmlns:local="clr-namespace:Lastgarriz.Views"
        d:DataContext="{d:DesignInstance Type=t:ConfigViewModel}"
        
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignDarkBackground}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        
        mc:Ignorable="d" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" SizeToContent="WidthAndHeight" WindowStyle="None"
        Title="Configuration" Height="484" Width="624" AllowsTransparency="True" Topmost="True" Opacity="1" RenderTransformOrigin="0.5,0.5"
        MouseLeftButtonDown="DragWindow" Activated="Window_Activated">
    <!-- Background="{DynamicResource MaterialDesignPaper}" -->
    <!-- FontFamily="{DynamicResource MaterialDesignFont}" -->
    <Window.RenderTransform>
        <TransformGroup>
            <ScaleTransform x:Name="WindowScaleTransform"/>
        </TransformGroup>
    </Window.RenderTransform>
    <Window.Resources>
        <u:MultiParamConverter x:Key="multiParamConverter"/>
    </Window.Resources>
    <Grid Margin="0,0,0,0" Background="#FF333333">
        <Grid Margin="2,2,2,2">
            <!-- Background="#FF444444"-->
            <Button HorizontalAlignment="Left" Margin="586,-1,0,0" VerticalAlignment="Top" Width="34" Height="28" Background="#FF333333" Command="{Binding Commands.CloseWindow}" Cursor="Hand" BorderThickness="0" Padding="0">
                <Button.Content>
                    <Grid>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="-45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                    </Grid>
                </Button.Content>
            </Button>
            <Label Content="Lastgarriz options" HorizontalAlignment="Left" Margin="35,1,0,0" VerticalAlignment="Top" Width="552" HorizontalContentAlignment="Center"/>
            <Grid Margin="15,30,15,50">
                <TabControl HorizontalAlignment="Left" VerticalAlignment="Top" Width="590" Height="400" BorderBrush="#FF333333" BorderThickness="1 1 1 1" Style="{StaticResource MaterialDesignTabControl}">
                    <TabItem Header="General settings">
                        <Grid>
                            <materialDesign:Card Padding="32" Margin="16">
                                <Grid>
                                    <TextBlock Text="Preferences" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" Foreground="{DynamicResource MaterialDesignDarkForeground}"/>
                                    <Grid Margin="428,1,1,235">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Text="Dev" ToolTip="Developer mode : can use features without launching HLL instance." Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                                        <CheckBox HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" RenderTransformOrigin="0.357,1.269" Margin="2,0,0,0" ToolTip="Developer mode : can use features without launching HLL instance." IsChecked="{Binding DevMode}"/>
                                    </Grid>
                                    <CheckBox Margin="9,32,264,205" RenderTransformOrigin="0.357,1.269" Content="Disable startup message" ToolTip="Disable startup message" Foreground="{DynamicResource MaterialDesignBodyLight}" IsChecked="{Binding DisableStartup}"/>
                                    <CheckBox Margin="9,130,255,107" RenderTransformOrigin="0.357,1.269" Content="Mouse Y Axis inverted in-game" IsChecked="{Binding InvertedMouse}" ToolTip="Enable or disable to convert rocket distance value according to your in-game settings." Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                                    <TextBlock Text="Rocket crosshair : WIP" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" Foreground="{DynamicResource MaterialDesignDarkForeground}" Margin="0,98,0,0"/>
                                    <CheckBox Margin="9,163,72,74" RenderTransformOrigin="0.357,1.269" Content="Convert indicator value to meters (WIP - not working)" IsChecked="{Binding ConvertIndicator}" ToolTip="Enable if you want to convert indicator value to approximate meters.&#x0a;&#x0a;The conversion allows to obtain the distance if the Z axis position (3D-Game)&#x0a;of the source and the target are ideally identical but this can never be always the case in game." Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                                    <CheckBox Margin="9,196,255,41" RenderTransformOrigin="0.357,1.269" Content="Steady aim values" IsChecked="{Binding SteadyAim}" IsEnabled="{Binding ConvertIndicator}" ToolTip="Enable or disable if you are using or not steady aim shortcut in-game with rocket indicator feature." Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                                    <CheckBox Margin="9,229,34,8" RenderTransformOrigin="0.357,1.269" Content="Panzerschreck (enable) / Bazooka (disable)" IsChecked="{Binding SchreckZook}" IsEnabled="{Binding ConvertIndicator}" ToolTip="Switch to display values if you are using panzerschreck (enable) or bazooka (disable)" Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                                </Grid>
                            </materialDesign:Card>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Shortcuts" >
                        <Grid>
                            <materialDesign:Card Padding="32" Margin="16">
                                <Grid>
                                    <TextBlock Text="Artillery metric converter" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" Foreground="{DynamicResource MaterialDesignDarkForeground}"/>

                                    <TextBlock Text="Start converting" HorizontalAlignment="Left" Margin="143,35,0,0" VerticalAlignment="Top" ToolTip="Start converting meters to milliradians." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                    <TextBox HorizontalAlignment="Left" Height="24" Margin="32,30,0,0" Text="{Binding Features.Artillery_validate.Hotkey}" ToolTip="{Binding Features.Artillery_validate.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyDown">
                                                <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Artillery_validate}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <TextBlock Text="US/GER metrics" HorizontalAlignment="Left" Margin="143,65,0,0" VerticalAlignment="Top" ToolTip="Show or hide artillery metric converter in Hell Let Loose, game need to be launched first.&#x0a;Hit numeric keystrokes representing meters value then hit Shift or Ctrl key to convert them in milliradians." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                    <CheckBox Margin="9,62,467,175" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding Features.Artillery_usger.IsEnable}"/>
                                    <TextBox HorizontalAlignment="Left" Height="24" Margin="32,60,0,0" IsEnabled="{Binding Features.Artillery_usger.IsEnable}" Text="{Binding Features.Artillery_usger.Hotkey}" ToolTip="{Binding Features.Artillery_usger.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyDown">
                                                <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Artillery_usger}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <TextBlock Text="RU metrics" HorizontalAlignment="Left" Margin="143,95,0,0" VerticalAlignment="Top" ToolTip="Show or hide artillery metric converter in Hell Let Loose, game need to be launched first.&#x0a;Hit numeric keystrokes representing meters value then hit Shift or Ctrl key to convert them in milliradians." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                    <CheckBox Margin="9,92,467,145" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding Features.Artillery_ru.IsEnable}"/>
                                    <TextBox HorizontalAlignment="Left" Height="24" Margin="32,90,0,0" IsEnabled="{Binding Features.Artillery_ru.IsEnable}" Text="{Binding Features.Artillery_ru.Hotkey}" ToolTip="{Binding Features.Artillery_ru.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyDown">
                                                <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Artillery_ru}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <TextBlock Text="Rocket crosshair (WIP)" Margin="0,130,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" Foreground="{DynamicResource MaterialDesignDarkForeground}"/>

                                    <TextBlock Visibility="Hidden" Text="Show indicator" HorizontalAlignment="Left" Margin="143,165,0,0" VerticalAlignment="Top" ToolTip="Show rocket indicator near the center of the screen for a limited time." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                    <TextBox Visibility="Hidden" HorizontalAlignment="Left" Height="24" Margin="32,160,0,0" Text="{Binding Features.Rocket_start.Hotkey}" ToolTip="{Binding Features.Rocket_start.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyDown">
                                                <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Rocket_start}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Rocket_start}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </TextBox>

                                    <TextBlock Text="Enable feature" HorizontalAlignment="Left" Margin="143,165,0,0" VerticalAlignment="Top" ToolTip="Enable or disable rocket crosshair overlay.&#x0a;Hit middle mouse button to show rocket crosshair for a limited time.&#x0a;&#x0a;The displayed indicators are approximates and absolutely does not take into account game variables." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                    <CheckBox Margin="9,162,467,75" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding Features.Rocket_enable.IsEnable}"/>
                                    <TextBox HorizontalAlignment="Left" Height="24" Margin="32,160,0,0" IsEnabled="{Binding Features.Rocket_enable.IsEnable}" Text="{Binding Features.Rocket_enable.Hotkey}" ToolTip="{Binding Features.Rocket_enable.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyDown">
                                                <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Rocket_enable}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>


                                    <TextBlock Text="Others" HorizontalAlignment="Left" Margin="280,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="{DynamicResource MaterialDesignDarkForeground}"/>

                                    <TextBlock Text="Open settings" HorizontalAlignment="Left" Margin="410,35,0,0" VerticalAlignment="Top" ToolTip="Open this settings window with a shortcut." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                    <CheckBox Margin="277,32,199,205" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding Features.Configuration.IsEnable}"/>
                                    <TextBox HorizontalAlignment="Left" Height="24" Margin="300,30,0,0" IsEnabled="{Binding Features.Configuration.IsEnable}" Text="{Binding Features.Configuration.Hotkey}" ToolTip="{Binding Features.Configuration.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True" Cursor="Arrow">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyDown">
                                                <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Configuration}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Grid d:Visibility="Visible" Visibility="Hidden">
                                        <TextBlock Text="WIP" HorizontalAlignment="Left" Margin="280,150,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="{DynamicResource MaterialDesignDarkForeground}"/>
                                        <TextBlock Text="Open browser" HorizontalAlignment="Left" Margin="410,185,0,0" VerticalAlignment="Top" ToolTip="WIP : Open server browser using battlemetrics API." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                        <CheckBox Margin="277,182,199,55" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding Features.Browser.IsEnable}"/>
                                        <TextBox HorizontalAlignment="Left" Height="24" Margin="300,180,0,0" IsEnabled="{Binding Features.Browser.IsEnable}" Text="{Binding Features.Browser.Hotkey}" ToolTip="{Binding Features.Browser.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewKeyDown">
                                                    <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Browser}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <TextBlock Text="Auto queue" HorizontalAlignment="Left" Margin="410,215,0,0" VerticalAlignment="Top" ToolTip="WIP : Activate auto queue." Foreground="{DynamicResource MaterialDesignBodyLight}" />
                                        <CheckBox Margin="277,212,199,25" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding Features.Autoqueue.IsEnable}"/>
                                        <TextBox HorizontalAlignment="Left" Height="24" Margin="300,210,0,0" IsEnabled="{Binding Features.Autoqueue.IsEnable}" Text="{Binding Features.Autoqueue.Hotkey}" ToolTip="{Binding Features.Autoqueue.Hotkey}" Foreground="{DynamicResource MaterialDesignDarkForeground}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True" Cursor="Arrow">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewKeyDown">
                                                    <c:AdvancedInvokeCommandAction Command="{Binding Commands.SetHotKey}" PassEventArgsToCommand="True" CommandParameter="{Binding Features.Autoqueue}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </Grid>
                                </Grid>
                            </materialDesign:Card>
                            <TextBlock Text="TIP : Put your mouse hover a feature's label to see details." HorizontalAlignment="Left" Margin="25,318,0,0" VerticalAlignment="Top" FontStyle="Italic" FontSize="12" Foreground="{DynamicResource MaterialDesignBodyLight}" />
                        </Grid>
                    </TabItem>
                </TabControl>

            </Grid>
            <Button Content="Save and Close" HorizontalAlignment="Left" Margin="92,443,0,10"  Width="129" Height="27" FontWeight="Bold" Command="{Binding Commands.SaveConfig}" />
            <Button Content="Load Default" HorizontalAlignment="Left" Margin="249,443,0,10"  Width="120" Height="27" FontWeight="Bold" Command="{Binding Commands.LoadDefaultConfig}" Cursor="Hand" />
            <Button Content="Close" HorizontalAlignment="Left" Margin="395,443,0,10" Width="120" Height="27" FontWeight="Bold" Command="{Binding Commands.CloseWindow}" />
        </Grid>
    </Grid>
</Window>
